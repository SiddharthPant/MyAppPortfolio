<resources>

    <!-- Base application theme. -->
    <style name="AppTheme" parent="Theme.AppCompat.Light.DarkActionBar">
        <!-- Customize your theme here. -->
        <item name="colorPrimary">@color/colorPrimary</item>
        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
        <item name="colorAccent">@color/colorAccent</item>
        <!-- The default Udacious button coloring that I wanted for all buttons -->
        <item name="colorButtonNormal">@color/colorAccent</item>
        <item name="colorControlHighlight">@color/colorAccentLight</item>
    </style>

    <style name="AppTheme.NoActionBar">
        <item name="windowActionBar">false</item>
        <item name="windowNoTitle">true</item>
    </style>

    <style name="AppTheme.AppBarOverlay" parent="ThemeOverlay.AppCompat.Dark.ActionBar" />

    <style name="AppTheme.PopupOverlay" parent="ThemeOverlay.AppCompat.Light" />

    <!--
    The next four lines were the hardest for me but it helped me to wonderfully understand
    AppCompat, ThemeOverlay etc. So let me present you with the API 23 way of coloring buttons
    that is fully backwards compatible. The easy way would've been to just use backwardTint
    attribute but It will fail in pre-Lollipop devices(AppCompat 23.1.1 has it but still it wasn't
    working). Besides API 23 now gives this much mature way.

    I'm essentially using ThemeOverlay.AppCompat to overlay default color attribute of the Capstone
    app button according to my liking. This all took a whole day of rewrites and experimentation.
    -->
    <style name="CapstoneTheme" parent="ThemeOverlay.AppCompat.Dark">
        <item name="colorButtonNormal">@color/colorSpecial</item>
        <item name="colorControlHighlight">@color/colorSpecialLight</item>
    </style>

    <style name="ButtonStyle">
        <item name="android:layout_height">@dimen/button_height</item>
        <item name="android:layout_width">@dimen/button_width</item>
        <item name="android:onClick">onClickListner</item>
        <item name="android:layout_centerHorizontal">true</item>
    </style>

</resources>